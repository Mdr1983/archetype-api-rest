# Parámetros específicos de BYL Arquitecturas
byl:
  audit:
    enabled: true
    internal-enable: false
  datasource-primary:
    enabled: true
  # LDAP
  ldap:
    active: false
  # Swagger
  swagger:
    controller:
      basePackage: com.mdemanuel.controller_rest
      title: ${spring.application.name}
      description: Controller REST API for ${spring.application.name} application
      version: ${app.version}
      termsOfServiceUrl:
      contact:
        name: Departamento Arquitectura
        url:
        email: <pbaranano@bimbaylola.com>
      license:
      licenseUrl:
  addTraceInApiException: true
  isApiAuditable: true
  excludeAuditApi: '/swagger-ui,/swagger-resources,/v2,/manage/health,/manage/prometheus'

app:
  version: '@project.version@'
  fqdn: localhost

# Para exponer los endpoints de actuator
management:
  health:
    ldap:
      enabled: false
  endpoint:
    health:
      show-details: always
      probes:
        enabled: false
    prometheus:
      enabled: false
  endpoints:
    web:
      base-path: /actuator
      cors:
        allowed-origins: "http://localhost"
        allowed-methods: "GET,POST"
      exposure:
        include: health,info,prometheus,env
  metrics:
    export:
      prometheus:
        enabled: false
      health:
        time-export: 60000

# Datos del server
server:
  port: 8080
  servlet:
    context-path: /vas-application
  ssl:
    enabled: false

#API REST
rest:
  path: /api/rest

# Encriptación con jasypt, para las password
jasypt:
  encryptor:
    algorithm: PBEWithMD5AndDES
    iv-generator-classname: org.jasypt.iv.NoIvGenerator
    password: zrxJuly

# Para ver los valores en las querys de Hibernate
logging:
  level:
    org:
      hibernate:
        type:
          descriptor:
            sql: trace

# Datos de spring
spring:
  banner:
    location: classpath:/banner.txt
  profiles:
    active: test,auditoria_externa
  config:
    import: optional:file:${HOME_CONFIG_APLICACIONES}/Core-order-aditional.yml

  # Para no habilitar tomcat como contenedor si no queremos usar el arquetipo para exponer servicios web y demas operaciones que requierean un contenedor web
  # Posibles valores
  # NONE
  # The application should not run as a web application and should not start an embedded web server.
  # REACTIVE
  # The application should run as a reactive web application and should start an embedded reactive web server.
  # SERVLET
  # The application should run as a servlet-based web application and should start an embedded servlet web server.
  #  main:
  #    web-application-type: none
  main:
    banner-mode: off
  application:
    name: tms-core-order
  output:
    ansi:
      enabled: DETECT
  # Seguridad
  security:
    enable-csrf: false
    enabled: true
    basic:
      enabled: true
    user:
      name: bob
      password: ENC(fwjreY+iNoFRUurxG9+Uw8qi6gvDA2Yu)
      ip-white: localhost,127.0.0.1

  # BBDD embebida H2 en memoria
  h2:
    console:
      enabled: true
      path: /h2
      settings:
        web-allow-others: true

  datasource:
    datasource-initializer-enabled: true
    initialization-mode: embedded
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      driverClassName: org.h2.Driver
      auto-commit: true
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
    jdbcUrl: jdbc:h2:mem:testdb;MODE=MSSQLServer;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=false;
    username: sa
    password:
    driverClassName: org.h2.Driver
    poolName: HikariCP-Principal
    h2:
      database-platform: org.hibernate.dialect.SQLServer2012Dialect

  datasource-wms:
    datasource-initializer-enabled: true
    initialization-mode: embedded
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      driverClassName: org.h2.Driver
      auto-commit: true
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
    jdbcUrl: jdbc:h2:mem:testdb;MODE=MSSQLServer;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=false;
    username: sa
    password: null
    driverClassName: org.h2.Driver
    poolName: HikariCP-Principal

  datasource-audit:
    datasource-initializer-enabled: true
    initialization-mode: embedded
    hikari:
      minimum-idle: 5
      maximum-pool-size: 20
      driverClassName: org.h2.Driver
      auto-commit: true
      idle-timeout: 600000
      max-lifetime: 1800000
      connection-timeout: 30000
      connection-test-query: SELECT 1
    jdbcUrl: jdbc:h2:mem:testdb;MODE=MySQL;DB_CLOSE_DELAY=-1;DB_CLOSE_ON_EXIT=FALSE;DATABASE_TO_UPPER=false;
    username: sa
    password:
    driverClassName: org.h2.Driver
    poolName: HikariCP-Audit

  # Configuración JPA e Hibernate
  jpa:
    properties:
      hibernate:
        generate_statistics: false
        show_sql: false
        format_sql: false
        jdbc:
          fetch_size: 100
          batch_size: 100
        order_inserts: true
        order_updates: true
        batch_versioned_data: true
        cache:
          use_query_cache: false
          use_second_level_cache: false
          use_structured_entries: false
          use_minimal_puts: false

  # Configuración ehCache
  cache:
    type: none
  jmx:
    enabled: true

  kafka:
    topic: vas
    topicHealth: vas-health
    jass:
      enabled: false
    listener:
      concurrency: 2
      bootstrap-servers: localhost:9092
    consumer:
      group-id: 0
      auto-offset-reset: latest
      key-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      value-deserializer: org.apache.kafka.common.serialization.StringDeserializer
      properties:
        reconnect.backoff.ms: 10000
    producer:
      key-serializer: org.apache.kafka.common.serialization.StringSerializer
      value-serializer: org.apache.kafka.common.serialization.StringSerializer
      properties:
        enable:
          idempotence: false

cache:
  enable-redis: false
  task-force: ${TASK_FORCE}
  host: localhost
  port: 6379
  default-ttl: 86400
  password: 'secretpassword'
  key-prefix: '${spring.application.name}'
  use-key-prefix: true
  # Tiempo de cache en sg.
  caches-ttl:
    cache-day: 86400
    cache-hour: 3600

# Elasticsearch props
elasticsearch:
  host: localhost
  authorization:
    type: Basic
    password: foo
  timeout: 30000

logback:
  level:
    elastic: INFO

archetype-logistic-api:
  cache:
    retry:
      batch-cron: 30 23 * * * *
